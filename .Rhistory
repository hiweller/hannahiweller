plotColorPalette(i$centers, i$sizes, horiz = FALSE)
}
# convert to patternize:
patternize_list <- readRDS("~/Dropbox/color/recolorize_examples/02_wasps/rds_files/patternize_list.rds")
# and set extents again:
for (i in 1:length(patternize_list)) {
for (j in 1:length(patternize_list[[1]])) {
raster::extent(patternize_list[[i]][[j]]) <- extent_list[[i]]
}
}
# convert to patternize:
patternize_list <- readRDS("~/Dropbox/color/recolorize_examples/02_wasps/rds_files/patternize_list.rds")
source("~/Dropbox/color/recolorize_examples/patPCA_total.R")
wasp_pca <- patPCA_total(patternize_list, quietly = FALSE)
# first, make a blank plot
PCx <- 1; PCy <- 2
pca_summary <- summary(wasp_pca)
limits <- apply(wasp_pca$x[ , c(PCx, PCy)], 2, range)
par(mar = c(4, 4, 2, 1))
plot(wasp_pca$x[ , c(PCx, PCy)], type = "n",
asp = 1,
xlim = limits[ , 1] + c(-5, 5),
ylim = limits[ , 2] + c(-10, 10),
xlab=paste0('PC1 (', round(pca_summary$importance[2, PCx]*100, 1), ' %)'),
ylab=paste0('PC2 (', round(pca_summary$importance[2, PCy]*100, 1), ' %)'))
# then add images:
for (i in 1:length(impose_list)) {
add_image(impose_list[[i]]$original_img,
x = wasp_pca$x[i, PCx],
y = wasp_pca$x[i, PCy],
width = 20)
}
par(mar = c(4, 4, 2, 1))
plot(wasp_pca$x[ , c(PCx, PCy)], type = "n",
asp = 1,
xlim = limits[ , 1] + c(-5, 5),
ylim = limits[ , 2] + c(-10, 10),
xlab=paste0('PC1 (', round(pca_summary$importance[2, PCx]*100, 1), ' %)'),
ylab=paste0('PC2 (', round(pca_summary$importance[2, PCy]*100, 1), ' %)'))
# read in images from the original folder:
images <- lapply(dir("~/Dropbox/color/recolorize_examples/02_wasps/original_images/",
full.names = TRUE),
readImage)
# and plot:
for (i in 1:length(images)) {
add_image(images[[i]],
x = wasp_pca$x[i, PCx],
y = wasp_pca$x[i, PCy],
width = 15)
}
blogdown::build_site()
blogdown::serve_site()
# create a dataset
# feat. creatures from Animal Land Where There Are No People (1897)
species <- c(rep("womp", 2),
rep("boddle", 2),
rep("temmalunk", 2))
anatomy <- rep(c("legs" , "eyes") , 3)
number <- abs(rnorm(6, 2, 2))
size <- abs(rnorm(6, 5, 2))
data <- data.frame(species, anatomy, value)
# create a dataset
# feat. creatures from Animal Land Where There Are No People (1897)
species <- c(rep("womp", 2),
rep("boddle", 2),
rep("temmalunk", 2))
anatomy <- rep(c("legs" , "eyes") , 3)
number <- abs(rnorm(6, 2, 2))
size <- abs(rnorm(6, 5, 2))
data <- data.frame(species, anatomy, number, size)
# graph - even with the difficult palette, we can still see all the information:
library(ggplot2)
ggplot(data, aes(fill = anatomy, y = number, x = anatomy)) +
geom_bar(position = "dodge", stat = "identity") +
scale_fill_manual(values = dichromat(red_grey)) +
facet_wrap(~species) + theme_bw() +
xlab("")
library(dichromat)
red_grey <- RColorBrewer::brewer.pal(11, "RdGy")[c(2, 10)]
check_cb(red_grey)
check_cb <- function(palette, return_cb_palettes = FALSE, ...) {
# make an empty list
cb_palettes <- setNames(vector("list", length = 3),
nm = c("protan", "deutan", "tritan"))
# generate colorblindness approximations
for (i in 1:length(cb_palettes)) {
cb_palettes[[i]] <- dichromat::dichromat(palette, names(cb_palettes)[i])
}
# reset graphical parameters when function exits:
current_par <- graphics::par(no.readonly = TRUE)
on.exit(graphics::par(current_par))
# plot for comparison
layout(matrix(1:4, nrow = 4)); par(mar = rep(1, 4))
recolorize::plotColorPalette(palette, main = "Trichromacy", ...)
pnames <- c("Protanopia", "Deutanopia", "Tritanopia")
for (i in 1:3) {
recolorize::plotColorPalette(cb_palettes[[i]], main = pnames[i], ...)
}
if (return_cb_palettes) {
return(cb_palettes)
}
}
check_cb(RColorBrewer::brewer.pal(9, "RdBu"))
# create a dataset
# feat. creatures from Animal Land Where There Are No People (1897)
species <- c(rep("womp", 2),
rep("boddle", 2),
rep("temmalunk", 2))
anatomy <- rep(c("legs" , "eyes") , 3)
number <- abs(rnorm(6, 2, 2))
size <- abs(rnorm(6, 5, 2))
data <- data.frame(species, anatomy, number, size)
# graph - even with the difficult palette, we can still see all the information:
library(ggplot2)
ggplot(data, aes(fill = anatomy, y = number, x = anatomy)) +
geom_bar(position = "dodge", stat = "identity") +
scale_fill_manual(values = dichromat(red_grey)) +
facet_wrap(~species) + theme_bw() +
xlab("")
x <- rnorm(40, 5)
df <- data.frame(x = x,
group = c(rep("y1", 20), rep("y2", 20)),
value = c(x[1:20] + rnorm(10),
x[21:40]*1.5 + rnorm(10)))
ggplot(df, aes(x = x, y = value, color = group)) +
geom_point(size = 3) + theme_bw() +
scale_color_manual(values = dichromat(red_grey))
x <- rnorm(40, 5)
df <- data.frame(x = x,
group = c(rep("y1", 20), rep("y2", 20)),
value = c(x[1:20] + rnorm(10),
x[21:40]*2 + rnorm(10)))
ggplot(df, aes(x = x, y = value, color = group)) +
geom_point(size = 3) + theme_bw() +
scale_color_manual(values = dichromat(red_grey))
x <- rnorm(40, 5)
df <- data.frame(x = x,
group = c(rep("y1", 20), rep("y2", 20)),
value = c(x[1:20] + rnorm(10),
x[21:40]*1.5 + rnorm(10)))
ggplot(df, aes(x = x, y = value, color = group)) +
geom_point(size = 3) + theme_bw() +
scale_color_manual(values = dichromat(red_grey))
x <- rnorm(40, 5)
df <- data.frame(x = x,
group = c(rep("y1", 20), rep("y2", 20)),
value = c(x[1:20] + rnorm(10, 3),
x[21:40]*1.5 + rnorm(10, 3)))
ggplot(df, aes(x = x, y = value, color = group)) +
geom_point(size = 3) + theme_bw() +
scale_color_manual(values = dichromat(red_grey))
x <- rnorm(40, 5)
df <- data.frame(x = x,
group = c(rep("y1", 20), rep("y2", 20)),
value = c(x[1:20] + rnorm(10, sd = 3),
x[21:40]*1.5 + rnorm(10, sd = 3)))
ggplot(df, aes(x = x, y = value, color = group)) +
geom_point(size = 3) + theme_bw() +
scale_color_manual(values = dichromat(red_grey))
x <- rnorm(40, 5)
df <- data.frame(x = x,
group = c(rep("y1", 20), rep("y2", 20)),
value = c(x[1:20] + rnorm(10, sd = 3),
x[21:40]*1.5 + rnorm(10, sd = 3)))
ggplot(df, aes(x = x, y = value, color = group)) +
geom_point(size = 3) + theme_bw() +
geom_smooth(method = "lm") +
scale_color_manual(values = dichromat(red_grey))
x <- rnorm(40, 5)
df <- data.frame(x = x,
group = c(rep("y1", 20), rep("y2", 20)),
value = c(x[1:20] + rnorm(10, sd = 3),
x[21:40]*1.5 + rnorm(10, sd = 3)))
ggplot(df, aes(x = x, y = value, color = group)) +
geom_point(size = 3) + theme_bw() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values = dichromat(red_grey))
x <- rnorm(40, 5)
df <- data.frame(x = x,
group = c(rep("y1", 20), rep("y2", 20)),
value = c(x[1:20] + rnorm(10, sd = 3),
x[21:40]*1.5 + rnorm(10, sd = 3)))
ggplot(df, aes(x = x, y = value, color = group)) +
geom_point(size = 3) + theme_bw() +
scale_color_manual(values = dichromat(red_grey))
red_grey <- RColorBrewer::brewer.pal(11, "RdGy")[c(2, 10)]
red_grey <- c("orange", "grey")
check_cb(red_grey)
red_grey <- RColorBrewer::brewer.pal(11, "RdGy")[c(2, 10)]
red_grey <- t(col2rgb(c("orange", "grey"))/255)
check_cb(red_grey)
t(col2rgb(c("orange", "grey"))/255)
check_cb(red_grey)
dichromat(red_grey)
dichromat("orange")
red_grey <- RColorBrewer::brewer.pal(11, "RdGy")[c(2, 10)]
red_grey <- rgb(t(col2rgb(c("orange", "grey"))/255))
check_cb(red_grey)
red_grey <- RColorBrewer::brewer.pal(11, "RdGy")[c(2, 10)]
red_grey <- rgb(t(col2rgb(c("orange", "grey40"))/255))
check_cb(red_grey)
red_grey <- RColorBrewer::brewer.pal(11, "RdGy")[c(2, 10)]
red_grey <- rgb(t(col2rgb(c("orange", "grey60"))/255))
check_cb(red_grey)
red_grey <- RColorBrewer::brewer.pal(11, "RdGy")[c(2, 10)]
red_grey <- rgb(t(col2rgb(c("orange", "grey70"))/255))
check_cb(red_grey)
red_grey <- RColorBrewer::brewer.pal(11, "RdGy")[c(2, 10)]
red_grey <- rgb(t(col2rgb(c("orange", "grey80"))/255))
check_cb(red_grey)
red_grey <- RColorBrewer::brewer.pal(11, "RdGy")[c(2, 10)]
check_cb(red_grey)
p <- ggplot(data, aes(fill = anatomy, y = number, x = anatomy)) +
geom_bar(position = "dodge", stat = "identity") +
facet_wrap(~species) + theme_bw() +
xlab("")
# create a dataset
# feat. creatures from Animal Land Where There Are No People (1897)
species <- c(rep("womp", 2),
rep("boddle", 2),
rep("temmalunk", 2))
anatomy <- rep(c("legs" , "eyes") , 3)
number <- abs(rnorm(6, 2, 2))
size <- abs(rnorm(6, 5, 2))
data <- data.frame(species, anatomy, number, size)
# graph
library(ggplot2)
p <- ggplot(data, aes(fill = anatomy, y = number, x = anatomy)) +
geom_bar(position = "dodge", stat = "identity") +
facet_wrap(~species) + theme_bw() +
xlab("")
# trichomatic:
p + scale_fill_manual(values = red_grey)
# and protanopic:
p + scale_fill_manual(values = dichromat(red_grey, type = "protan"))
x <- rnorm(40, 5)
df <- data.frame(x = x,
group = c(rep("y1", 20), rep("y2", 20)),
value = c(x[1:20] + rnorm(10, sd = 3),
x[21:40]*1.5 + rnorm(10, sd = 3)))
p <- ggplot(df, aes(x = x, y = value, color = group)) +
geom_point(size = 3) + theme_bw()
p + scale_color_manual(values = dichromat(red_grey, type = "deutan")) + ggtitle("")
x <- rnorm(40, 5)
df <- data.frame(x = x,
group = c(rep("y1", 20), rep("y2", 20)),
value = c(x[1:20] + rnorm(10, sd = 3),
x[21:40]*1.5 + rnorm(10, sd = 3)))
p <- ggplot(df, aes(x = x, y = value, color = group)) +
geom_point(size = 3) + theme_bw()
p + scale_color_manual(values = dichromat(red_grey, type = "protan")) + ggtitle("")
x <- rnorm(40, 5)
df <- data.frame(x = x,
group = c(rep("y1", 20), rep("y2", 20)),
value = c(x[1:20] + rnorm(10, sd = 3),
x[21:40]*1.5 + rnorm(10, sd = 3)))
p <- ggplot(df, aes(x = x, y = value, color = group)) +
geom_point(size = 3) + theme_bw()
p + scale_color_manual(values = red_grey) + ggtitle("Trichromacy")
p + scale_color_manual(values = dichromat(red_grey, type = "protan")) + ggtitle("Protanopia")
x <- rnorm(40, 5)
df <- data.frame(x = x,
group = c(rep("y1", 20), rep("y2", 20)),
value = c(x[1:20] + rnorm(10, sd = 2),
x[21:40]*1.5 + rnorm(10, sd = 2)))
p <- ggplot(df, aes(x = x, y = value, color = group)) +
geom_point(size = 3) + theme_bw()
p + scale_color_manual(values = red_grey) + ggtitle("Trichromacy")
p + scale_color_manual(values = dichromat(red_grey, type = "protan")) + ggtitle("Protanopia")
red_grey_2 <- c("red", "grey40")
p + scale_color_manual(values = dichromat(red_grey_2))
red_grey_2 <- c("red", "grey40")
p + scale_color_manual(values = dichromat(red_grey_2, type = "protan"))
red_grey <- col2rgb(c("red", "grey40"))
check_cb(red_grey)
col2rgb(c("red", "grey40"))
red_grey <- c("#FF0000", "#636363")
check_cb(red_grey)
# create a dataset
# feat. creatures from Animal Land Where There Are No People (1897)
species <- c(rep("womp", 2),
rep("boddle", 2),
rep("temmalunk", 2))
anatomy <- rep(c("legs" , "eyes") , 3)
number <- abs(rnorm(6, 2, 2))
size <- abs(rnorm(6, 5, 2))
data <- data.frame(species, anatomy, number, size)
# graph
library(ggplot2)
p <- ggplot(data, aes(fill = anatomy, y = number, x = anatomy)) +
geom_bar(position = "dodge", stat = "identity") +
facet_wrap(~species) + theme_bw() +
xlab("")
# trichomatic:
p + scale_fill_manual(values = red_grey)
# and protanopic:
p + scale_fill_manual(values = dichromat(red_grey, type = "protan"))
x <- rnorm(40, 5)
df <- data.frame(x = x,
group = c(rep("y1", 20), rep("y2", 20)),
value = c(x[1:20] + rnorm(10, sd = 2),
x[21:40]*1.5 + rnorm(10, sd = 2)))
p <- ggplot(df, aes(x = x, y = value, color = group)) +
geom_point(size = 3) + theme_bw()
p + scale_color_manual(values = red_grey) + ggtitle("Trichromacy")
p + scale_color_manual(values = dichromat(red_grey, type = "protan")) + ggtitle("Protanopia")
x <- rnorm(40, 5)
df <- data.frame(x = x,
group = c(rep("y1", 20), rep("y2", 20)),
value = c(x[1:20] + rnorm(10, sd = 2),
x[21:40]*2 + rnorm(10, sd = 2)))
p <- ggplot(df, aes(x = x, y = value, color = group)) +
geom_point(size = 3) + theme_bw()
p + scale_color_manual(values = red_grey) + ggtitle("Trichromacy")
p + scale_color_manual(values = dichromat(red_grey, type = "protan")) + ggtitle("Protanopia")
red_grey_2 <- c("salmon", "grey40")
p + scale_color_manual(values = dichromat(red_grey_2, type = "protan"))
red_grey_2 <- c("salmon", "grey30")
p + scale_color_manual(values = dichromat(red_grey_2, type = "protan"))
red_grey_2 <- c("tomato", "grey30")
p + scale_color_manual(values = dichromat(red_grey_2, type = "protan"))
red_grey_2 <- c("tomato", "grey30")
p + scale_color_manual(values = dichromat(red_grey_2, type = "deutan"))
red_grey_2 <- c("tomato", "grey30")
p + scale_color_manual(values = dichromat(red_grey_2, type = "tritan"))
red_grey_2 <- c("tomato", "grey30")
p + scale_color_manual(values = dichromat(red_grey_2, type = "protan"))
red_grey_2 <- c("tomato", "grey30")
grey2 <- c("grey70", "grey20")
red_blue <- c("tomato", "dodgerblue")
p + scale_color_manual(values = dichromat(red_grey_2, type = "protan")) + ggtitle("Altered red/grey palette")
p + scale_color_manual(values = dichromat(grey2, type = "protan")) + ggtitle("") + ggtitle("Greyscale palette")
p + scale_color_manual(values = dichromat(red_blue, type = "protan")) + ggtitle("Blue and red palette")
red_grey_2 <- c("tomato", "grey30")
grey2 <- c("grey70", "grey20")
red_blue <- c("tomato", "dodgerblue")
p + scale_color_manual(values = dichromat(red_grey_2, type = "protan")) + ggtitle("Altered red/grey palette")
p + scale_color_manual(values = dichromat(grey2, type = "protan")) + ggtitle("") + ggtitle("Greyscale palette")
p + scale_color_manual(values = dichromat(red_blue, type = "deutan")) + ggtitle("Blue and red palette")
red_grey_2 <- c("tomato", "grey30")
grey2 <- c("grey70", "grey20")
red_blue <- c("tomato", "dodgerblue")
p + scale_color_manual(values = dichromat(red_grey_2, type = "protan")) + ggtitle("Altered red/grey palette")
p + scale_color_manual(values = dichromat(grey2, type = "protan")) + ggtitle("") + ggtitle("Greyscale palette")
p + scale_color_manual(values = dichromat(red_blue, type = "tritan")) + ggtitle("Blue and red palette")
red_grey_2 <- c("tomato", "grey30")
grey2 <- c("grey70", "grey20")
red_blue <- c("tomato", "dodgerblue")
p + scale_color_manual(values = dichromat(red_grey_2, type = "protan")) + ggtitle("Altered red/grey palette")
p + scale_color_manual(values = dichromat(grey2, type = "protan")) + ggtitle("") + ggtitle("Greyscale palette")
p + scale_color_manual(values = dichromat(red_blue, type = "protan")) + ggtitle("Blue and red palette")
check_cb(viridisLite::viridis(100))
check_cb(viridisLite::viridis(100), cex_text = 0)
check_cb(viridisLite::viridis(10), cex_text = 0)
blogdown::build_site()
blogdown::check_site()
blogdown:::preview_site()
library(recolorize)
img <- "assets/media/icon.png"
library(recolorize)
rc <- recolorize2(img, n_final = 1)
img <- "~/Dropbox/hannahiweller/assets/media/icon.png"
library(recolorize)
rc <- recolorize2(img, n_final = 1)
img <- "~/Dropbox/hannahiweller/assets/media/icon.png"
library(recolorize)
rc <- recolorize2(readImage(img), n_final = 1)
img <- "~/Dropbox/hannahiweller/assets/media/icon.png"
library(recolorize)
im <- readImage(img)
img <- "~/Dropbox/hannahiweller/assets/media/icon.png"
library(recolorize)
im <- readImage(img)
plotImageArray(im)
img <- "~/Dropbox/hannahiweller/assets/media/icon.png"
library(recolorize)
im <- readImage(img)
rc <- recolorize(im)
plotImageArray(im)
img <- "~/Dropbox/hannahiweller/assets/media/icon.png"
library(recolorize)
library(dichromat)
im <- readImage(img)
rc <- recolorize(im, plotting = FALSE)
plotImageArray(constructImage(rc$pixel_assignments, rc$centers))
plotImageArray(constructImage(rc$pixel_assignments,
dichromat(rc$centers)))
dichromat(rc$centers)
rc$centers
img <- "~/Dropbox/hannahiweller/assets/media/icon.png"
library(recolorize)
library(dichromat)
im <- readImage(img)
rc <- recolorize2(im, plotting = FALSE)
im <- png::readPNG(img)
col2rgb(rc$centers)
rgb(rc$centers)
rc$sizes
img <- "~/Dropbox/hannahiweller/assets/media/icon.png"
library(recolorize)
library(dichromat)
im <- png::readPNG(img)
rc <- recolorize(im, plotting = FALSE)
plotImageArray(constructImage(rc$pixel_assignments, rc$centers))
plotImageArray(constructImage(rc$pixel_assignments,
dichromat("#7289DA")))
dichromat("#7289DA")
img <- "~/Dropbox/hannahiweller/assets/media/icon.png"
library(recolorize)
library(dichromat)
im <- png::readPNG(img)
rc <- recolorize(im, plotting = FALSE)
plotImageArray(constructImage(rc$pixel_assignments, rc$centers))
plotImageArray(constructImage(rc$pixel_assignments,
centers = dichromat("#7289DA")))
t(col2rgb(dichromat("#7289DA")/255))
t(col2rgb(dichromat("#7289DA"))/255)
img <- "~/Dropbox/hannahiweller/assets/media/icon.png"
library(recolorize)
library(dichromat)
im <- png::readPNG(img)
rc <- recolorize(im, plotting = FALSE)
protan <- t(col2rgb(dichromat("#7289DA", type = "protan"))/255)
deutan <- t(col2rgb(dichromat("#7289DA", type = "deutan"))/255)
tritan <- t(col2rgb(dichromat("#7289DA", type = "tritan"))/255)
plotImageArray(constructImage(rc$pixel_assignments, rc$centers))
plotImageArray(constructImage(rc$pixel_assignments,
centers = protan))
img <- "~/Dropbox/hannahiweller/assets/media/icon.png"
library(recolorize)
library(dichromat)
im <- png::readPNG(img)
rc <- recolorize(im, plotting = FALSE)
protan <- t(col2rgb(dichromat("#7289DA", type = "protan"))/255)
deutan <- t(col2rgb(dichromat("#7289DA", type = "deutan"))/255)
tritan <- t(col2rgb(dichromat("#7289DA", type = "tritan"))/255)
layout(matrix(1:4, nrow = 1)); par(mar = rep(0, 4))
plotImageArray(constructImage(rc$pixel_assignments, rc$centers))
plotImageArray(constructImage(rc$pixel_assignments,
centers = protan))
plotImageArray(constructImage(rc$pixel_assignments,
centers = deutan))
plotImageArray(constructImage(rc$pixel_assignments,
centers = tritan))
img <- "~/Dropbox/hannahiweller/assets/media/icon.png"
library(recolorize)
library(dichromat)
im <- png::readPNG(img)
rc <- recolorize(im, plotting = FALSE)
rc$centers[1, ] <- t(col2rgb("orchid2")/255)
protan <- t(col2rgb(dichromat("orchid2", type = "protan"))/255)
deutan <- t(col2rgb(dichromat("orchid2", type = "deutan"))/255)
tritan <- t(col2rgb(dichromat("orchid2", type = "tritan"))/255)
layout(matrix(1:4, nrow = 1)); par(mar = rep(0, 4))
plotImageArray(constructImage(rc$pixel_assignments, rc$centers))
plotImageArray(constructImage(rc$pixel_assignments,
centers = protan))
plotImageArray(constructImage(rc$pixel_assignments,
centers = deutan))
plotImageArray(constructImage(rc$pixel_assignments,
centers = tritan))
img <- "~/Dropbox/hannahiweller/assets/media/icon.png"
library(recolorize)
library(dichromat)
im <- png::readPNG(img)
rc <- recolorize(im, plotting = FALSE)
rc$centers[1, ] <- t(col2rgb("orchid2")/255)
protan <- t(col2rgb(dichromat("orchid2", type = "protan"))/255)
deutan <- t(col2rgb(dichromat("orchid2", type = "deutan"))/255)
tritan <- t(col2rgb(dichromat("orchid2", type = "tritan"))/255)
layout(matrix(1:4, nrow = 1)); par(mar = rep(0, 4))
plotImageArray(constructImage(rc$pixel_assignments, rc$centers),
main = "Original")
plotImageArray(constructImage(rc$pixel_assignments,
centers = protan),
main = "Red-down (protanopic)")
plotImageArray(constructImage(rc$pixel_assignments,
centers = deutan),
main = "Green-down (deutanopic)")
plotImageArray(constructImage(rc$pixel_assignments,
centers = tritan),
main = "Blue-down (tritanopic)")
img <- "~/Dropbox/hannahiweller/assets/media/icon.png"
library(recolorize)
library(dichromat)
im <- png::readPNG(img)
rc <- suppressMessages(recolorize(im, plotting = FALSE))
rc$centers[1, ] <- t(col2rgb("orchid2")/255)
protan <- t(col2rgb(dichromat("orchid2", type = "protan"))/255)
deutan <- t(col2rgb(dichromat("orchid2", type = "deutan"))/255)
tritan <- t(col2rgb(dichromat("orchid2", type = "tritan"))/255)
layout(matrix(1:4, nrow = 1)); par(mar = c(0, 0, 0, 1))
plotImageArray(constructImage(rc$pixel_assignments, rc$centers),
main = "Original")
plotImageArray(constructImage(rc$pixel_assignments,
centers = protan),
main = "Red-down (protanopic)")
plotImageArray(constructImage(rc$pixel_assignments,
centers = deutan),
main = "Green-down (deutanopic)")
plotImageArray(constructImage(rc$pixel_assignments,
centers = tritan),
main = "Blue-down (tritanopic)")
layout(matrix(1:4, nrow = 1)); par(mar = c(0, 0, 1, 0))
plotImageArray(constructImage(rc$pixel_assignments, rc$centers),
main = "Original")
install.packages("blogdown")
blogdown:::preview_site()
blogdown:::preview_site()
blogdown::install_hugo("0.82.0")
blogdown:::preview_site()
tinytex::install_tinytex()
